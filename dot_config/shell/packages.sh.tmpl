#!/usr/bin/env bash

install-rust-tools() {
	rustup component add {{- .dependencies.rustup -}}
}

install-uv-tools() {
	tools=( {{- .dependencies.uv | quoteList | join " " -}} )

	for tool in "${tools[@]}"; do
		"$HOME/.local/bin/uv" tool install --upgrade "$tool"
	done

	"$HOME/.local/bin/uv" tool install --upgrade --from git+https://github.com/motty-mio2/dixp.git dixp
}

install-volta-tools() {
	"$VOLTA_HOME/bin/volta" install node@lts

	tools=( {{- .dependencies.volta | quoteList | join " " -}} )
	for tool in "${tools[@]}"; do
		"$VOLTA_HOME/bin/volta" install "$tool"
	done
}

install-arch-tools() {
	sudo pacman -Sy --noconfirm --needed base-devel git
	if [ -e "/usr/bin/yay" ]; then
		echo "yay is already installed."
	else
		WORK_DIR=$(mktemp -d)
		git clone https://aur.archlinux.org/yay-bin.git "$WORK_DIR" --depth 1
		eval cd "$WORK_DIR" && makepkg --noconfirm -si
		rm -rf "$WORK_DIR"
	fi
	yay -Sy --noconfirm \
		byobu curl git go  \
		htop  \
		pkg-config screen tree ttf-hackgen unarchiver unzip \
		zsh
}

install-debian-tools() {
	sudo apt-get update
	sudo apt-get upgrade -qy
	sudo apt-get install -qy \
		build-essential byobu curl git \
		htop  libssl-dev \
		tree unzip \
		zsh
}

install-ubuntu-dev-tools() {
	sudo add-apt-repository ppa:longsleep/golang-backports
	sudo apt-get install ca-certificates curl

	echo "VSCode"
	curl https://packages.microsoft.com/keys/microsoft.asc | sudo gpg --yes --dearmor -o /etc/apt/trusted.gpg.d/microsoft.gpg
	echo \
		"deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/microsoft.gpg] \
		https://packages.microsoft.com/repos/vscode stable main" | \
		sudo tee /etc/apt/sources.list.d/vscode.list

	echo "Docker"
	if [ ! -f "/etc/apt/keyrings/docker.asc" ]; then
		sudo apt purge -y docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc
		sudo install -m 0755 -d /etc/apt/keyrings
		sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
		sudo chmod a+r /etc/apt/keyrings/docker.asc
	fi

	# Add the repository to Apt sources:
	echo \
		"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] \
		https://download.docker.com/linux/ubuntu \
		$(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
		sudo tee /etc/apt/sources.list.d/docker.list >/dev/null

	echo "Wezterm"
	curl -fsSL https://apt.fury.io/wez/gpg.key | sudo gpg --yes --dearmor -o /etc/apt/keyrings/wezterm-fury.gpg
	echo \
		"deb [signed-by=/etc/apt/keyrings/wezterm-fury.gpg] https://apt.fury.io/wez/ * *" | \
		sudo tee /etc/apt/sources.list.d/wezterm.list >/dev/null

	sudo apt-get update
	sudo apt-get install golang
	sudo apt-get install code
	sudo apt-get install flatpak
	sudo apt-get install wezterm
	sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

	sudo apt-get install clangd clang-format clang-tidy lld
}

install-brew-tools() {
	"${BREW_PREFIX}/bin/brew" tap wez/wezterm-linuxbrew
	"${BREW_PREFIX}/bin/brew" install \
		bat chezmoi gh glab go-task \
		lazygit neovim \
		oh-my-posh sccache shellcheck shfmt starship stylua svls svlint \
		wezterm
}

install-nix-tools() {
	nix profile install "$(chezmoi source-path)/nix/cli/.#cli"
	nix profile install "$(chezmoi source-path)/nix/dev/.#dev"
}

install-arch-desktop-dependency() {
	yay -Sy fcitx5-im fcitx5-configtool fcitx5-mozc visual-studio-code-bin
}

install-flatpak-apps() {
	flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo
}
